This is an attempt to create regression tests for Doxygen, primarly for Fortran parser.
Under development..., the rules and the layout may change.

 RUNNING TESTS
It requires Python 2.5 and python-libxml2.
In the root directory to run all tests or for specific tests:
  ./test.py tests.blocks
  ./test.py tests.blocks.interface_op_f90

This creates separate temporary directory for every test where test Fortran file and Doxyfile are copied. Doxygen is run in the directory and XML output is written to 'xml' subdirectory. Finally, corresponding Python test is executed. The temporary directory is deleted at the end.

If you want to preserve and inspect the results use -d <outdir> command line argument to avoid temporary directory:
  ./test.py -d out --fg fortran.comments.outofplace_f90
The --fg also redirects Doxygen output to standard output. This directory is not cleaned (deleted) every time test is executed, so there may be false positives. You should clean it yourself when it is necessary.

 WRITING TESTS
Place new Fortran file into one of the directories: syntax, blocks, linecont, or other. Update corresponding Python file in the 'tests' directory:
  - create test class that extends FortranTestCase
  - define checkXML() method
    - use self.getModule(name) to fetch libxml2 XML element instance for module
    - there is a set of predefined methods in FortranTestCase (base.py)
    - use elem.xpathEval("...") to fetch other elements
    - use self.assertTrue(), self.assertEqual(), ... to verify fetched values

XPath standard:
http://www.w3.org/TR/xpath/
Check "2.5 Abbreviated Syntax" before writing your tests.
